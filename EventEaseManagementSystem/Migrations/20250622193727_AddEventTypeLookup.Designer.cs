// <auto-generated />
using System;
using EventEaseManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventEaseManagementSystem.Migrations
{
    [DbContext(typeof(EventEaseDBContext))]
    [Migration("20250622193727_AddEventTypeLookup")]
    partial class AddEventTypeLookup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventEaseManagementSystem.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date");

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int")
                        .HasColumnName("VenueID");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951ACD896D0D81");

                    b.HasIndex("EventId");

                    b.HasIndex(new[] { "VenueId", "EventId", "BookingDate" }, "UniqueBooking")
                        .IsUnique()
                        .HasFilter("[VenueID] IS NOT NULL AND [EventID] IS NOT NULL");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.BookingView", b =>
                {
                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    b.Property<string>("Image")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("VenueId")
                        .HasColumnType("int")
                        .HasColumnName("VenueID");

                    b.Property<string>("VenueLocation")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.ToTable((string)null);

                    b.ToView("BookingView", (string)null);
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int")
                        .HasColumnName("VenueID");

                    b.HasKey("EventId")
                        .HasName("PK__Event__7944C87006A11589");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("VenueId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("EventTypeId");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VenueID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("VenueId")
                        .HasName("PK__Venue__3C57E5D2B348A4AD");

                    b.HasIndex(new[] { "VenueName" }, "UQ__Venue__A40F8D12023FA950")
                        .IsUnique();

                    b.ToTable("Venue", (string)null);
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.Booking", b =>
                {
                    b.HasOne("EventEaseManagementSystem.Models.Event", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventId")
                        .HasConstraintName("Booking_Event");

                    b.HasOne("EventEaseManagementSystem.Models.Venue", "Venue")
                        .WithMany("Bookings")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("Booking_Venue");

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.Event", b =>
                {
                    b.HasOne("EventEaseManagementSystem.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Event_EventType");

                    b.HasOne("EventEaseManagementSystem.Models.Venue", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("Event_Venue");

                    b.Navigation("EventType");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.Event", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("EventEaseManagementSystem.Models.Venue", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}

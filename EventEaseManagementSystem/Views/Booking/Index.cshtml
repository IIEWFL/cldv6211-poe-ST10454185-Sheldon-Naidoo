@model IEnumerable<EventEaseManagementSystem.Models.Booking>

@{
    ViewData["Title"] = "Manage Bookings";
    string? currentSearchQuery = ViewData["CurrentSearchQuery"] as string;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Manage Bookings</h2>
    <div>
        <a asp-action="Create" class="btn btn-primary me-2">Create New Booking</a>
        <a asp-action="Index" class="btn btn-secondary">Clear Search</a> 
    </div>
</div>


<form asp-action="Index" method="get" class="mb-4">
    <div class="input-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Search by Booking ID, Event Name, Venue Name, or Booking Date" value="@currentSearchQuery" />
        <button type="submit" class="btn btn-outline-primary">Search Booking</button>
    </div>
</form>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["UpdateMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        @TempData["UpdateMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["DeleteMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        @TempData["DeleteMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (!Model.Any())
{
    <div class="alert alert-info text-center" role="alert">
        No bookings found.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover table-striped border rounded-3 overflow-hidden">

            <thead class="bg-light">
                <tr>
                    <th class="py-3">
                        @Html.DisplayNameFor(model => model.BookingDate)
                    </th>
                    <th class="py-3">
                        Event Name 
                    </th>
                    <th class="py-3">
                        Venue Name 
                    </th>
                    <th class="py-3 text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.BookingDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Event.EventName) 
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Venue.VenueName) 
                        </td>
                        <td class="text-end">

                            <a asp-action="Edit" asp-route-id="@item.BookingId" class="btn btn-sm btn-outline-primary me-2">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.BookingId" class="btn btn-sm btn-outline-info me-2">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.BookingId" class="btn btn-sm btn-outline-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}